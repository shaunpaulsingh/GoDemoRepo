name: CI setup for Go

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    
jobs:
  my-job:
    name: My Job
    runs-on: ubuntu-latest
    steps:
    - name: Print a greeting
      run: |
        echo Hello there!
  
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        # The Go version to download (if necessary) and use. Supports semver spec and ranges.
        go-version: 1.16.2
        # Whether to download only stable versions
        stable: true
        # Used to pull node distributions from go-versions.  Since there's a default, this is typically not supplied by the user.
        token: ${{ github.token }}
        
    - name: Get debs
      run: |
        go get -v github.com/tebeka/go2xunit
        
    - name: Check go version and init
      run: |
        go version
        go env
    

    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Checkout private
      uses: actions/checkout@v2
      with:
        repository: lowkh2/GoSchoolRemoteExample
        path: bensThing
        token: ${{ secrets.BENS_THING }}
      
    - name: Run tests
      run: |
        go test -v . | go2xunit > report.xml
        go test -v .

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: report.xml
    - if: ${{failure()}}
      name: Create Issues
      # You may pin to the exact commit or the version.
      # uses: nashmaniac/create-issue-action@b0c9250ca328a30c2989c7358bc4833f77953af2
      uses: nashmaniac/create-issue-action@v1.1
      with:
        # Title of the issue
        title: Build Failed
        # Token of the user that creates the issue
        token: ${{secrets.GITHUB_TOKEN}}
        # Labels of the issue
        labels: workflow-failed
        # Assignees of the issue
        assignees: ${{github.actor}}
        # Body of the issue
        body: Workflow failed for commit ${{github.sha}}
    - if: ${{success()}}
      name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: |
          Release ${{ github.ref }} ${{ steps.date.outputs.date }}
        body: ${{ steps.Changelog.outputs.changelog }}
        draft: false
        prerelease: false

    - if: ${{ success() }}
      name: Create download directory
      run: mkdir downloads
      
    - name: Prepare Documents
      run: |
        mv report.xml ./downloads
        
    - if: ${{ success() }}
      name: Prepare artifacts
      uses: actions/upload-artifact@v2
      with:
        name: assetDocuments
        path: downloads
        
    - if: ${{ success() }}
      name: Download Content
      uses: actions/download-artifact@v2
      with:
        name: assetDocuments
